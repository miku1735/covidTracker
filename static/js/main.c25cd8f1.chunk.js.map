{"version":3,"sources":["components/cards/Cards.module.css","components/cards/Cards.jsx","api/index.js","components/countryPicker/CountryPicker.jsx","components/charts/Chart.jsx","App.js","index.js","App.module.css","components/charts/Chart.module.css"],"names":["module","exports","Cards","data","confirmed","className","styles","container","Grid","spacing","justify","xs","md","item","component","Card","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","lastUpdate","toDateString","recovered","deaths","url","fetchData","a","axios","get","modefiedData","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","CountryPicker","Chart","React","useState","setDailyData","useEffect","fetchApi","console","log","lineChart","length","labels","datasets","label","borderColor","backgroundColor","fill","App","setData","fetch","autoPlay","muted","background","src","type","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c25cd8f1.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__cJPw6\",\"card\":\"Cards_card__1oySU\",\"infected\":\"Cards_infected__LLaYF\",\"recovered\":\"Cards_recovered__3JnRE\",\"deaths\":\"Cards_deaths__232yF\"};","import React from \"react\";\r\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\r\nimport styles from \"./Cards.module.css\";\r\nimport Countup from \"react-countup\";\r\nimport cx from \"classnames\";\r\n\r\nfunction Cards({ data }) {\r\n  if (!data.confirmed) {\r\n    return \"Loading....\";\r\n  }\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={1} justify=\"center\">\r\n        <Grid\r\n          xs={12}\r\n          md={3}\r\n          item\r\n          component={Card}\r\n          className={cx(styles.card, styles.infected)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Infected\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <Countup\r\n                start={0}\r\n                end={data.confirmed.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textPrimary\">\r\n              {new Date(data.lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of active cases of COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          xs={12}\r\n          md={3}\r\n          item\r\n          component={Card}\r\n          className={cx(styles.card, styles.recovered)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Recovered\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <Countup\r\n                start={0}\r\n                end={data.recovered.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textPrimary\">\r\n              {new Date(data.lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of recovery from COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n        <Grid\r\n          xs={12}\r\n          md={3}\r\n          item\r\n          component={Card}\r\n          className={cx(styles.card, styles.deaths)}\r\n        >\r\n          <CardContent>\r\n            <Typography color=\"textSecondary\" gutterBottom>\r\n              Deaths\r\n            </Typography>\r\n            <Typography variant=\"h5\">\r\n              <Countup\r\n                start={0}\r\n                end={data.deaths.value}\r\n                duration={2.5}\r\n                separator=\",\"\r\n              />\r\n            </Typography>\r\n            <Typography color=\"textPrimary\">\r\n              {new Date(data.lastUpdate).toDateString()}\r\n            </Typography>\r\n            <Typography variant=\"body2\">\r\n              Number of Deaths by COVID-19\r\n            </Typography>\r\n          </CardContent>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = \"https://covid19.mathdro.id/api\";\r\n\r\nexport const fetchData = async () => {\r\n  try {\r\n    const { data } = await axios.get(url);\r\n    const modefiedData = {\r\n      deaths: data.deaths,\r\n      confirmed: data.confirmed,\r\n      recovered: data.recovered,\r\n      lastUpdate: data.lastUpdate,\r\n    };\r\n    return modefiedData;\r\n  } catch (error) {}\r\n};\r\n\r\nexport const fetchDailyData = async () => {\r\n  try {\r\n    const { data } = await axios.get(`${url}/daily`);\r\n    const modifiedData = data.map((dailyData) => ({\r\n      confirmed: dailyData.confirmed.total,\r\n      deaths: dailyData.deaths.total,\r\n      date: dailyData.reportDate,\r\n    }));\r\n    return modifiedData;\r\n  } catch {}\r\n};\r\n\r\nexport const fetchCountries = async () => {\r\n  try {\r\n    const {\r\n      data: { countries },\r\n    } = await axios.get(`${url}/countries`);\r\n    return countries.map((country) => country.name);\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\r\nimport styles from \"./CountryPicker.module.css\";\r\nimport { fetchCountries } from \"../../api\";\r\n\r\nfunction CountryPicker() {\r\n  const [fetchedCountries, setFetchedCountries] = React.useState([]);\r\n  React.useEffect(() => {\r\n    const countries = async () => {\r\n      setFetchedCountries(await fetchCountries());\r\n    };\r\n    countries();\r\n  }, [setFetchedCountries]);\r\n  return (\r\n    <FormControl className={styles.FormControl}>\r\n      <NativeSelect>\r\n        <option value=\"global\">Global</option>\r\n        {fetchedCountries.map((country, i) => (\r\n          <option key={i} value={country}>\r\n            {country}\r\n          </option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  );\r\n}\r\n\r\nexport default CountryPicker;\r\n","import React from \"react\";\r\nimport { fetchDailyData } from \"../../api\";\r\nimport { Line, Bar } from \"react-chartjs-2\";\r\nimport styles from \"./Chart.module.css\";\r\n\r\nfunction Chart() {\r\n  const [dailyData, setDailyData] = React.useState([]);\r\n\r\n  React.useEffect(() => {\r\n    const fetchApi = async () => {\r\n      setDailyData(await fetchDailyData());\r\n    };\r\n    console.log(dailyData);\r\n    fetchApi();\r\n  }, []);\r\n  console.log(dailyData.map(({ confirmed }) => confirmed));\r\n  const lineChart = dailyData.length ? (\r\n    <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) => date),\r\n        datasets: [\r\n          {\r\n            data: dailyData.map(({ confirmed }) => confirmed),\r\n            label: \"Infected\",\r\n            borderColor: \"#3333ff\",\r\n            backgroundColor: \"rgba(0,0,255,0.15)\",\r\n            fill: true,\r\n          },\r\n          {\r\n            data: dailyData.map(({ deaths }) => deaths),\r\n            label: \"Deaths\",\r\n            borderColor: \"red\",\r\n            backgroundColor: \"rgba(255,0,0,0.5)\",\r\n            fill: true,\r\n          },\r\n        ],\r\n      }}\r\n    />\r\n  ) : null;\r\n\r\n  return <div className={styles.container}>{lineChart}</div>;\r\n}\r\n\r\nexport default Chart;\r\n","import React from \"react\";\r\nimport styles from \"./App.module.css\";\r\n\r\nimport { Cards, Chart, CountryPicker } from \"./components\";\r\nimport { fetchData } from \"./api\";\r\nfunction App() {\r\n  const [data, setData] = React.useState({});\r\n\r\n  React.useEffect(() => {\r\n    async function fetch() {\r\n      const data = await fetchData();\r\n      setData(data);\r\n    }\r\n    fetch();\r\n  }, []);\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <video autoPlay muted className={styles.background}>\r\n        <source\r\n          src=\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/ElephantsDream.mp4\"\r\n          type=\"video/mp4\"\r\n        />\r\n      </video>\r\n      <Cards data={data} />\r\n      {/* <CountryPicker /> */}\r\n      <Chart />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\n\r\nimport App from \"./App\"\r\n\r\nReactDOM.render(<App/> , document.getElementById(\"root\"))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3paS3\",\"background\":\"App_background__3Cd1q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2a39M\"};"],"sourceRoot":""}